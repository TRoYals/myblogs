[{"categories":["workflow"],"content":"基于 obsidian 与 hugo 的 obsidian 博客工作流 其实内容还是比较简单的，这里写的话主要是做一个记录。 ","date":"2023-03-14","objectID":"/obsidian_to_hugo-workflow/:0:0","tags":["tools"],"title":"obsidian_to_hugo workflow","uri":"/obsidian_to_hugo-workflow/"},{"categories":["workflow"],"content":"obsidian ","date":"2023-03-14","objectID":"/obsidian_to_hugo-workflow/:1:0","tags":["tools"],"title":"obsidian_to_hugo workflow","uri":"/obsidian_to_hugo-workflow/"},{"categories":["workflow"],"content":"下载 pandoc 导出插件 社区插件中下载，能将 md 格式导出为支持 hugo 的 markdown 格式。 选择 hugo 中的post/ 文件夹作为默认导出位置，十分方便。 ","date":"2023-03-14","objectID":"/obsidian_to_hugo-workflow/:1:1","tags":["tools"],"title":"obsidian_to_hugo workflow","uri":"/obsidian_to_hugo-workflow/"},{"categories":["workflow"],"content":"templatr 生成模版 这里主要是根据 hugo 的默认的 metadata 来调整模版，一个例子 想在 ob 中写 blog 直接导入就可以了，很快捷。 ","date":"2023-03-14","objectID":"/obsidian_to_hugo-workflow/:1:2","tags":["tools"],"title":"obsidian_to_hugo workflow","uri":"/obsidian_to_hugo-workflow/"},{"categories":["workflow"],"content":"hugo 导入后 git 同步就可以了。 ","date":"2023-03-14","objectID":"/obsidian_to_hugo-workflow/:2:0","tags":["tools"],"title":"obsidian_to_hugo workflow","uri":"/obsidian_to_hugo-workflow/"},{"categories":["archive"],"content":"记录一些开发用的网站 ","date":"2023-02-21","objectID":"/web_tool/:1:0","tags":["tool"],"title":"Web_tool","uri":"/web_tool/"},{"categories":["archive"],"content":"软件开发 使用方法 snyk,一个包的类似论坛？ 有 js，python，go 几乎所有的开源包的介绍和分析，很强大。 这个有 github 中某个方法的代码片段，就有点像 英语的 语料库一样。 Snyk Open Source Advisor | Snyk ","date":"2023-02-21","objectID":"/web_tool/:1:1","tags":["tool"],"title":"Web_tool","uri":"/web_tool/"},{"categories":["draft"],"content":"strat the project npx create-next-app nft-marketplace –typescript Use the tailwind Install Tailwind CSS with Next.js - Tailwind CSS: https://tailwindcss.com/docs/guides/nextjs ","date":"2023-02-20","objectID":"/react-ts-solidity-nftmarket/:1:0","tags":["draft"],"title":"React+TS+Solidity+NftMarket","uri":"/react-ts-solidity-nftmarket/"},{"categories":["draft"],"content":"Web3 Provider npm install ethers @metamask/providers A Provider is an abstraction of a connection to the Ethereum network, providing a concise, consistent interface to standard Ethereum node functionality. Providers 提供钱包接口服务 Getting Started ","date":"2023-02-20","objectID":"/react-ts-solidity-nftmarket/:2:0","tags":["draft"],"title":"React+TS+Solidity+NftMarket","uri":"/react-ts-solidity-nftmarket/"},{"categories":["draft"],"content":"Ganache Truffle 本地部署以太网 把这个看一遍基本就明白了 Truffle quickstart - Truffle Suite oppenzepplin/contracts Secure Smart Contract library for Solidity npm install @openzeppelin/contracts ","date":"2023-02-20","objectID":"/react-ts-solidity-nftmarket/:3:0","tags":["draft"],"title":"React+TS+Solidity+NftMarket","uri":"/react-ts-solidity-nftmarket/"},{"categories":["draft"],"content":"react custom hooks SWR “stale-while-revalidate” Why You Should Use React Query or SWR - This Dot Labs React Hooks for Data Fetching – SWR SWR：最具潜力的 React Hooks 数据请求库 - 知乎 ","date":"2023-02-20","objectID":"/react-ts-solidity-nftmarket/:4:0","tags":["draft"],"title":"React+TS+Solidity+NftMarket","uri":"/react-ts-solidity-nftmarket/"},{"categories":["QA-test"],"content":"Agile Manifesto ","date":"2023-02-17","objectID":"/basic_of_agiles/:1:0","tags":["Agile","QA-test"],"title":"Basic of Agiles \u0026 Agile Testing","uri":"/basic_of_agiles/"},{"categories":["QA-test"],"content":"Agile 4 Values individuals and interactions over processes and tools. Working software over comprehensive documentation Customer collaboration over contract negotiation. Responding to change over following a plan. ","date":"2023-02-17","objectID":"/basic_of_agiles/:1:1","tags":["Agile","QA-test"],"title":"Basic of Agiles \u0026 Agile Testing","uri":"/basic_of_agiles/"},{"categories":["QA-test"],"content":"Agile 12 principles Our highest priority is to satisfy the customer through early and continuous delivery of valuable software. Welcome changing requirements, even late in development. Agile processes harness change for the customer’s competitive advantage. Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.(one week to three months) Business people and developers must work together daily throughout the project.(work together!) Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done. The most efficient and effective method of conveying information to and within a development team is face-to-face conversation. Working software is the primary measure of progress. Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely. Continuous attention to technical excellence and good design enhances agility. Simplicity–the art of maximizing the amount of work not done–is essential.(!!!!) The best architectures, requirements, and designs emerge from self-organizing teams. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly. ","date":"2023-02-17","objectID":"/basic_of_agiles/:1:2","tags":["Agile","QA-test"],"title":"Basic of Agiles \u0026 Agile Testing","uri":"/basic_of_agiles/"},{"categories":["QA-test"],"content":"You can check my QA-test project experience from here: qa.naglfar ","date":"2023-02-17","objectID":"/indx/:0:0","tags":["QA-test"],"title":"QA-Test","uri":"/indx/"},{"categories":["flutter"],"content":"感觉 flutter 真的好优雅啊，跨平台，随时随地开发应用。 想的是这里建一个 todo List 来 track flutter 的学习记录。 start date #date170223 阅读 flutter 官网文档 ","date":"2023-02-17","objectID":"/%E5%A5%BD%E6%83%B3%E5%AD%A6flutter/:0:0","tags":["flutter"],"title":"好想学Flutter啊","uri":"/%E5%A5%BD%E6%83%B3%E5%AD%A6flutter/"},{"categories":null,"content":"Nice to see you here. ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"About Me","uri":"/about/"},{"categories":null,"content":" This documentation records some common questions and answers, mainly from GitHub Discussions. How to switch Hugo environments? Default environments are development with hugo server and production with hugo. Due to limitations in the local development environment, the comment system, CDN and fingerprint will not be enabled in the development environment. You could enable these features with hugo server -e production. Question Question Didn’t find your questions? Join the discussions. ","date":"2019-08-02","objectID":"/help/:0:0","tags":null,"title":"Help Center","uri":"/help/"},{"categories":null,"content":"offline cache page of FixIt theme","date":"0001-01-01","objectID":"/offline/","tags":null,"title":"","uri":"/offline/"},{"categories":null,"content":"Friends template demo of FixIt theme","date":"0001-01-01","objectID":"/friends/","tags":null,"title":"Friends","uri":"/friends/"},{"categories":null,"content":" Add your FixIt site You could add your FixIt site to this page in nickname lexicographical order via making a PR or editing data , the format is as follows: - nickname: \u003cyour nickname\u003e avatar: \u003cyour avatar\u003e url: \u003cyour site link\u003e description: \u003cdescription of your site\u003e  Website failure, stop maintenance and improper content may be unlinked! ","date":"0001-01-01","objectID":"/friends/:0:0","tags":null,"title":"Friends","uri":"/friends/"},{"categories":["draft"],"content":"引子 在掘金上看到了这篇文章，感觉还蛮有意思的，试试看能不能解决。 面试了十几个高级前端，竟然连（扁平数据结构转 Tree）都写不出来 - 掘金 输入： let arr = [ { id: 1, name: \"部门1\", pid: 0 }, { id: 2, name: \"部门2\", pid: 1 }, { id: 3, name: \"部门3\", pid: 1 }, { id: 4, name: \"部门4\", pid: 3 }, { id: 5, name: \"部门5\", pid: 4 }, ]; 输出： [ { \"id\": 1, \"name\": \"部门1\", \"pid\": 0, \"children\": [ { \"id\": 2, \"name\": \"部门2\", \"pid\": 1, \"children\": [] }, { \"id\": 3, \"name\": \"部门3\", \"pid\": 1, \"children\": [ ]}]} ] 解决 ","date":"0001-01-01","objectID":"/%E6%89%81%E5%B9%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%ACtree/:0:0","tags":["draft"],"title":"扁平结构转Tree","uri":"/%E6%89%81%E5%B9%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%ACtree/"},{"categories":["draft"],"content":"思路 1 循环每一个 id，然后对每一个 id 查找 pid，复杂度 O($N^2$) 这样可以吗？ 答案是不行的，要注意，这里每一个 parent 节点是可以有多个子节点的，子节点又是可以作为新的父母节点的。 在进一步思考这个问题前，回忆 深拷贝的代码 function clone(o) { var temp = {}; for (var key in o) { if (typeof o[key] == \"object\") { temp[key] = clone(o[key]); } else { temp[key] = o[key]; } } return temp; } 我们不难发现，这道题的 本质就是深拷贝！！ 只不过需要将深拷贝中的 if 判断换成寻找 pid。 搞清楚这个后，代码就很容易写出来了。 ","date":"0001-01-01","objectID":"/%E6%89%81%E5%B9%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%ACtree/:1:0","tags":["draft"],"title":"扁平结构转Tree","uri":"/%E6%89%81%E5%B9%B3%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%BD%ACtree/"}]